generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  number    String    @unique
  password  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  address   Address[]
  booking   Booking[]
}

model Address {
  id     Int    @id @default(autoincrement())
  street String
  city   String
  zip    String
  userId Int
  user   User   @relation(fields: [userId], references: [id])
}

model Staff {
  id        Int       @id @default(autoincrement())
  name      String
  password  String?
  number    String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  isAdmin   Boolean   @default(false)

  StaffAvailability StaffAvailability[]
}

model StaffAvailability {
  id Int @id @default(autoincrement())
  staffId Int
  timeGap Int
  day DayOfWeek
  startTime DateTime
  endTime DateTime
  isAvailable Boolean @default(false)
  updatedAt DateTime @updatedAt
  cratedAt DateTime @default(now())
  staff Staff @relation(fields: [staffId], references: [id])
}

model Booking {
  id             Int             @id @default(autoincrement())
  userId         Int
  user           User            @relation(fields: [userId], references: [id])
  bookedServices BookedService[]
  bookingType    String
  price          Int
  address        String?
  time           DateTime
  date           DateTime
}

model BookedService {
  id        Int     @id @default(autoincrement())
  bookingId Int
  booking   Booking @relation(fields: [bookingId], references: [id])
  services  Json[]
}

model Services {
  id          Int      @id @default(autoincrement())
  servicename String   @unique
  price       Int
  img         String[]
}

model Pckages {
  id       Int    @id @default(autoincrement())
  name     String
  price    Int
  services Json[]
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}